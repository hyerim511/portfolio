/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 pleasedonut.gltf --transform 
Files: pleasedonut.gltf [5.05KB] > /Users/hrkim/Documents/Study/new-portfolio/portfolio/public/pleasedonut-transformed.glb [243.12KB] (-4714%)
*/

import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { proxy, useSnapshot } from "valtio";

export default function PleaseDonut({ state }) {
  const { nodes, materials } = useGLTF("/pleasedonut-transformed.glb");
  const ref = useRef();
  useFrame((state) => {
    const t = state.clock.getElapsedTime();
    ref.current.rotation.set(
      Math.cos(t / 4) / 4,
      Math.sin(t / 4) / 4,
      -0.2 - (1 + Math.sin(t / 1.5)) / 20
    );
    ref.current.position.y = (1 + Math.sin(t / 1.5)) / 80;
  });
  const snap = useSnapshot(state)
  materials["Material.002"].color.set(snap.color);
  return (
    <group ref={ref}>
      <mesh
        geometry={nodes.donut002.geometry}
        material={materials["Material.003"]}
        />
      <mesh
        geometry={nodes.icing002.geometry}
        material={materials["Material.002"]}
        />
      <mesh
        geometry={nodes.icing003.geometry}
        material={materials["Material.005"]}
      />
    </group>
  );
}

useGLTF.preload("/pleasedonut-transformed.glb");
